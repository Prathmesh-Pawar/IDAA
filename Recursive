•	Binary Search : 
Time Complexity : O(logn)   Space Complexity : O(1)
Input : Size of array and the array elements
Output : Index of the key element in sorted array
•	Factorial : 
Time complexity : O(n)   Space Complexity : O(n)
Input : The value of n
Output : Factorial of n
•	Sum of n Natural Numbers : 
Time Complexity : O(n)  Space Complexity : O(n)
Input : The value of n
Output : The sum of n natural numbers
•	Fibonacci Term : 
Time complexity : O(2n)  Space Complexity : O(n)
Input : The value of n
Output : nth term in Fibonacci series
CODE : 
#include<bits/stdc++.h>
using namespace std;
int binarySearch(int arr[], int low, int high, int key){
    if(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]==key)
            return mid;
        else if(arr[mid]<key)
            return binarySearch(arr, mid+1, high, key);
        else 
            return binarySearch(arr, low, mid-1, key);
    }
    
    return -1;
}
int fibbonacci(int n){
    if(n<=1)
        return n;
    return fibbonacci(n-1)+fibbonacci(n-2);
}
int factorial(int n){
    if(n<=1)
        return n;
    return n*factorial(n-1);
}
int sum(int n){
    if(n<1)
        return 0;
    return n+sum(n-1);
}
int main(){
    int n, k;
    cout<<"Enter size : ";
    cin>>n;
    int arr[n];
    cout<<"Enter Elements : ";
    for(int i=0; i<n; i++)
        cin>>arr[i];
    cout<<"Enter the key : ";
    cin>>k;
    sort(arr,arr+n);
    cout<<binarySearch(arr, 0, n-1, k)<<endl;;
    cout<<"Enter n : ";
    cin>>n;
    cout<<"The "<<n<<"th term in fibonacci series is : "<<fibbonacci(n)<<endl;
    cout<<"Enter n : ";
    cin>>n;
    cout<<"The Factorial of "<<n<<" is : "<<factorial(n)<<endl;
    cout<<"Enter n : ";
    cin>>n;
    cout<<"Sum of "<<n<<" Natural Numbers is  : "<<sum(n)<<endl;
    return 0;
}
